@page "/exercise"
@page "/exercise/{ExerciseId:int}"
@page "/exercise/{ExerciseId:int}/{Detail?}"
@rendermode InteractiveServer
@using Therapeasy.Model
@using Microsoft.AspNetCore.Authorization
@using System.Net.Http.Json
@using System.Text.Json
@using System.Text
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager

<AuthorizeView Roles="Therapist,Admin" Context="authContext">
<div style="float:right; padding-right:100px;">
  <small>View</small>
  <div class="toggle-container" @onclick=@(e => IsEdit = !IsEdit)>
      <input type="checkbox" class="toggle-checkbox" checked="@IsEdit" />
      <span class="toggle-slider"></span>
  </div>
  <small>Edit</small>
</div>
</AuthorizeView>
@if (IsEdit) {
  <EditExercise ExerciseId=@ExerciseId Detail=@Detail OnUpdate="HandleExerciseUpdate" />
} else {
  <ViewExercise ExerciseId=@ExerciseId Detail=@Detail />
}
<ThisExerciseImage ExerciseId=@ExerciseId EditMode=@(IsEdit ? "edit" : "view") />

@code {
    [Parameter]
    public int ExerciseId { get; set; }
    [Parameter]
    public string Detail { get; set; } = "nodetail";
    private bool IsEdit { get; set; } = false;
    public string Username { get; set; } = "";
    Exercise exercise = new Exercise();
    List<ExerciseImage> exerciseImages = new();
    
    private void HandleExerciseUpdate()
    {
        IsEdit = false;
    }

    protected override async Task OnInitializedAsync()
    {
        if (ExerciseId > 0)
        {
          var result = await HttpClient.GetFromJsonAsync<Exercise>(NavigationManager.BaseUri + "plandb/get/exercisefromid/" + ExerciseId);
          if (result != null)
          {
              exercise = result;
          }
        }
    }
}