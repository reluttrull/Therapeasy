@page "/exercises"
@page "/exercises/{Username}"
@page "/exercises/{Username}/{Detail?}"
@rendermode InteractiveServer
@using System.Net
@using Therapeasy.Model
@using System.Net.Http.Json
@using System.Text.Json
@using System.Text
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager

<h4>My Exercises</h4>
<div>
@foreach (Exercise exercise in exercises)
{
    <ViewExercise ExerciseId=@exercise.Id Detail=@Detail />
}

<h3>Add an exercise: </h3>
<EditForm Model="@exerciseToAdd" OnSubmit="Submit">
    <div><label>Exercise name (do NOT use identifiable information)</label><InputText @bind-Value="exerciseToAdd.Name" /></div>
    <div><label>Notes (do NOT use identifiable information)</label><InputText @bind-Value="exerciseToAdd.Notes" /></div>
    <div><label>Sets per day</label><InputNumber @bind-Value="exerciseToAdd.SetsPerDay" /></div>
    <div><label>Reps per set</label><InputNumber @bind-Value="exerciseToAdd.RepsPerSet" /></div>
    <div><button type="submit">Add exercise</button></div>
</EditForm>
</div>

@code {
    [Parameter]
    public string Username { get; set; } = "";
    [Parameter]
    public string Detail { get; set; } = "nodetail";
    List<Exercise> exercises = new();
    Exercise exerciseToAdd = new();


    private async void Submit() 
    {
      // save new plan to db
      exerciseToAdd.CreatedByUser = Username;
      exerciseToAdd.DateCreated = DateTime.Now.Date;
      var json = JsonSerializer.Serialize(exerciseToAdd);
      var content = new StringContent(json, Encoding.UTF8, "application/json");
      var response = await HttpClient.PostAsync(NavigationManager.BaseUri + "plandb/create/exercise/", content);
      if (!response.IsSuccessStatusCode)
      {
          Console.WriteLine($"Error: {response.StatusCode}");
          return;
      }
      exerciseToAdd = new();
      await LoadExercises();
      await InvokeAsync(StateHasChanged);
    }
    protected override async Task OnInitializedAsync()
    {
        await LoadExercises();
    }

    private async Task LoadExercises()
    {
        if (Username != "")
        {
          var result = await HttpClient.GetFromJsonAsync<List<Exercise>>(NavigationManager.BaseUri + "plandb/get/exercisesforuser/" + WebUtility.UrlEncode(Username));
          exercises = result ?? new List<Exercise>();
        }
    }
}